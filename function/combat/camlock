-- Camlock System Configuration
local CamlockConfig = {
    TargetPart = "Head",           -- –ß–∞—Å—Ç—å —Ç–µ–ª–∞ –¥–ª—è –ø—Ä–µ—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è
    FOV = 120,                     -- FOV –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ü–µ–ª–∏
    Smoothness = 5,                -- –ü–ª–∞–≤–Ω–æ—Å—Ç—å –ø—Ä–µ—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è (1-10)
    Prediction = 0.15,             -- –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –¥–≤–∏–∂–µ–Ω–∏—è —Ü–µ–ª–∏
    ShowFOVCircle = true,          -- –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –∫—Ä—É–≥ FOV
    FOVColor = Color3.fromRGB(255, 255, 255), -- –¶–≤–µ—Ç –∫—Ä—É–≥–∞ FOV
    FOVTransparency = 0.5,         -- –ü—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å –∫—Ä—É–≥–∞ FOV
    WallCheck = true,              -- –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–µ–Ω –º–µ–∂–¥—É –∏–≥—Ä–æ–∫–æ–º –∏ —Ü–µ–ª—å—é
    MaxDistance = 500,             -- –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–∏—Å—Ç–∞–Ω—Ü–∏—è –¥–ª—è —Ü–µ–ª–∏
    Keybind = "C"                  -- –ö–ª–∞–≤–∏—à–∞ –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –∫–∞–º–ª–æ–∫–∞
}

-- –°–∫–µ–ª–µ—Ç–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —á–∞—Å—Ç–µ–π —Ç–µ–ª–∞
local skeleton_order = {
    ["LeftFoot"] = "LeftLowerLeg",
    ["LeftLowerLeg"] = "LeftUpperLeg", 
    ["LeftUpperLeg"] = "LowerTorso",
    ["RightFoot"] = "RightLowerLeg",
    ["RightLowerLeg"] = "RightUpperLeg",
    ["RightUpperLeg"] = "LowerTorso",
    ["LeftHand"] = "LeftLowerArm",
    ["LeftLowerArm"] = "LeftUpperArm",
    ["LeftUpperArm"] = "Torso",
    ["RightHand"] = "RightLowerArm",
    ["RightLowerArm"] = "RightUpperArm", 
    ["RightUpperArm"] = "Torso",
    ["LowerTorso"] = "Torso",
    ["Torso"] = "Head"
}

-- –°–µ—Ä–≤–∏—Å—ã
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local Camera = Workspace.CurrentCamera

-- –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local currentTarget = nil
local isEnabled = false
local fovCircle = nil
local connections = {}

-- –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
_G.EnableCamlock = nil
_G.DisableCamlock = nil
_G.CleanupCamlock = nil
_G.SetCamlockTarget = nil
_G.SetCamlockFOV = nil
_G.SetCamlockSmoothness = nil
_G.SetCamlockPrediction = nil
_G.ToggleFOVCircle = nil

-- –°–æ–∑–¥–∞–Ω–∏–µ FOV –∫—Ä—É–≥–∞
local function CreateFOVCircle()
    if fovCircle then
        fovCircle:Remove()
    end
    
    fovCircle = Drawing.new("Circle")
    fovCircle.Thickness = 2
    fovCircle.NumSides = 50
    fovCircle.Radius = CamlockConfig.FOV
    fovCircle.Color = CamlockConfig.FOVColor
    fovCircle.Transparency = 1 - CamlockConfig.FOVTransparency
    fovCircle.Visible = CamlockConfig.ShowFOVCircle and isEnabled
    fovCircle.Filled = false
end

-- –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏ FOV –∫—Ä—É–≥–∞
local function UpdateFOVCircle()
    if fovCircle and Camera.ViewportSize then
        fovCircle.Position = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
        fovCircle.Radius = CamlockConfig.FOV
    end
end

-- –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–µ–Ω –º–µ–∂–¥—É –∏–≥—Ä–æ–∫–æ–º –∏ —Ü–µ–ª—å—é
local function WallCheck(targetPosition)
    if not CamlockConfig.WallCheck then
        return true
    end
    
    local character = LocalPlayer.Character
    if not character or not character:FindFirstChild("HumanoidRootPart") then
        return false
    end
    
    local origin = character.HumanoidRootPart.Position
    local direction = (targetPosition - origin).Unit * (targetPosition - origin).Magnitude
    
    local raycastParams = RaycastParams.new()
    raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
    raycastParams.FilterDescendantsInstances = {character}
    
    local raycastResult = Workspace:Raycast(origin, direction, raycastParams)
    
    if raycastResult then
        -- –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–ø–∞–ª –ª–∏ –ª—É—á –≤ —Ü–µ–ª—å –∏–ª–∏ –≤ —Å—Ç–µ–Ω—É
        local hitPart = raycastResult.Instance
        local targetCharacter = nil
        
        -- –ù–∞–π—Ç–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ —Ü–µ–ª–∏
        local temp = hitPart
        while temp and temp ~= Workspace do
            if temp:FindFirstChild("Humanoid") then
                targetCharacter = temp
                break
            end
            temp = temp.Parent
        end
        
        -- –ï—Å–ª–∏ –ª—É—á –ø–æ–ø–∞–ª –≤ —Ü–µ–ª—å - —Å—Ç–µ–Ω—ã –Ω–µ—Ç
        return targetCharacter ~= nil
    end
    
    return true
end

-- –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏ —Ü–µ–ª–∏ —Å –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ–º
local function GetTargetPosition(target)
    local targetPart = target:FindFirstChild(CamlockConfig.TargetPart)
    if not targetPart then
        return nil
    end
    
    local position = targetPart.Position
    
    -- –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –¥–≤–∏–∂–µ–Ω–∏—è
    if CamlockConfig.Prediction > 0 then
        local humanoid = target:FindFirstChild("Humanoid")
        if humanoid then
            local velocity = targetPart.Velocity
            position = position + (velocity * CamlockConfig.Prediction)
        end
    end
    
    return position
end

-- –ü–æ–∏—Å–∫ –±–ª–∏–∂–∞–π—à–µ–π —Ü–µ–ª–∏ –≤ FOV
local function FindTarget()
    local bestTarget = nil
    local bestDistance = math.huge
    local character = LocalPlayer.Character
    
    if not character or not character:FindFirstChild("HumanoidRootPart") then
        return nil
    end
    
    local screenCenter = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
    
    for _, player in pairs(Players:GetPlayers()) do
        if player == LocalPlayer then continue end
        
        local targetCharacter = player.Character
        if not targetCharacter then continue end
        
        local targetPart = targetCharacter:FindFirstChild(CamlockConfig.TargetPart)
        if not targetPart then continue end
        
        local humanoid = targetCharacter:FindFirstChild("Humanoid")
        if not humanoid or humanoid.Health <= 0 then continue end
        
        -- –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –¥–∏—Å—Ç–∞–Ω—Ü–∏–∏
        local distance = (character.HumanoidRootPart.Position - targetPart.Position).Magnitude
        if distance > CamlockConfig.MaxDistance then continue end
        
        -- –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–µ–Ω
        if not WallCheck(targetPart.Position) then continue end
        
        -- –ü—Ä–æ–≤–µ—Ä–∫–∞ FOV
        local screenPosition, onScreen = Camera:WorldToViewportPoint(targetPart.Position)
        if not onScreen then continue end
        
        local screenPos2D = Vector2.new(screenPosition.X, screenPosition.Y)
        local distanceFromCenter = (screenPos2D - screenCenter).Magnitude
        
        if distanceFromCenter <= CamlockConfig.FOV and distanceFromCenter < bestDistance then
            bestTarget = targetCharacter
            bestDistance = distanceFromCenter
        end
    end
    
    return bestTarget
end

-- –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∫–∞–º–ª–æ–∫–∞
local function CamlockUpdate()
    if not isEnabled or not currentTarget then
        return
    end
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∂–∏–≤–∞ –ª–∏ —Ü–µ–ª—å
    local humanoid = currentTarget:FindFirstChild("Humanoid")
    if not humanoid or humanoid.Health <= 0 then
        currentTarget = nil
        return
    end
    
    -- –ü–æ–ª—É—á–∞–µ–º –ø–æ–∑–∏—Ü–∏—é —Ü–µ–ª–∏
    local targetPosition = GetTargetPosition(currentTarget)
    if not targetPosition then
        currentTarget = nil
        return
    end
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–µ–Ω—ã
    if not WallCheck(targetPosition) then
        currentTarget = nil
        return
    end
    
    -- –ü–ª–∞–≤–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ –∫–∞–º–µ—Ä—ã –∫ —Ü–µ–ª–∏
    local currentCFrame = Camera.CFrame
    local targetCFrame = CFrame.lookAt(Camera.CFrame.Position, targetPosition)
    
    -- –ò–Ω—Ç–µ—Ä–ø–æ–ª—è—Ü–∏—è –¥–ª—è –ø–ª–∞–≤–Ω–æ—Å—Ç–∏
    local alpha = math.min(1, RunService.Heartbeat:Wait() * CamlockConfig.Smoothness)
    Camera.CFrame = currentCFrame:Lerp(targetCFrame, alpha)
end

-- –í–∫–ª—é—á–µ–Ω–∏–µ –∫–∞–º–ª–æ–∫–∞
local function EnableCamlock()
    if isEnabled then
        return
    end
    
    isEnabled = true
    CreateFOVCircle()
    
    -- –ü–æ–∏—Å–∫ –Ω–∞—á–∞–ª—å–Ω–æ–π —Ü–µ–ª–∏
    currentTarget = FindTarget()
    
    -- –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    connections.camlockUpdate = RunService.Heartbeat:Connect(CamlockUpdate)
    connections.fovUpdate = RunService.Heartbeat:Connect(UpdateFOVCircle)
    
    -- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–∏—Å–∫ –Ω–æ–≤–æ–π —Ü–µ–ª–∏ –µ—Å–ª–∏ —Ç–µ–∫—É—â–∞—è –ø–æ—Ç–µ—Ä—è–Ω–∞
    connections.targetCheck = RunService.Heartbeat:Connect(function()
        if not currentTarget then
            currentTarget = FindTarget()
        end
    end)
    
    print("üéØ Camlock enabled - Target:", currentTarget and currentTarget.Name or "None")
end

-- –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –∫–∞–º–ª–æ–∫–∞
local function DisableCamlock()
    if not isEnabled then
        return
    end
    
    isEnabled = false
    currentTarget = nil
    
    -- –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
    for name, connection in pairs(connections) do
        if connection then
            connection:Disconnect()
        end
    end
    connections = {}
    
    -- –£–¥–∞–ª–µ–Ω–∏–µ FOV –∫—Ä—É–≥–∞
    if fovCircle then
        fovCircle:Remove()
        fovCircle = nil
    end
    
    print("‚ùå Camlock disabled")
end

-- –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –∫–∞–º–ª–æ–∫–∞
local function ToggleCamlock()
    if isEnabled then
        DisableCamlock()
    else
        EnableCamlock()
    end
end

-- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∞–≤–∏—à
local function OnKeyPress(key)
    if key.KeyCode.Name:lower() == CamlockConfig.Keybind:lower() then
        ToggleCamlock()
    end
end

-- –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ —Å–∏—Å—Ç–µ–º—ã
local function CleanupCamlock()
    DisableCamlock()
    
    -- –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∫–ª–∞–≤–∏—à
    if connections.keyHandler then
        connections.keyHandler:Disconnect()
    end
    
    -- –û—á–∏—Å—Ç–∫–∞ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
    _G.EnableCamlock = nil
    _G.DisableCamlock = nil
    _G.CleanupCamlock = nil
    _G.SetCamlockTarget = nil
    _G.SetCamlockFOV = nil
    _G.SetCamlockSmoothness = nil
    _G.SetCamlockPrediction = nil
    _G.ToggleFOVCircle = nil
    
    print("üßπ Camlock system cleaned up")
end

-- –§—É–Ω–∫—Ü–∏–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
local function SetCamlockTarget(targetPart)
    CamlockConfig.TargetPart = targetPart or "Head"
    print("üéØ Camlock target set to:", CamlockConfig.TargetPart)
end

local function SetCamlockFOV(fov)
    CamlockConfig.FOV = math.clamp(fov or 120, 10, 500)
    if fovCircle then
        fovCircle.Radius = CamlockConfig.FOV
    end
    print("üëÅÔ∏è Camlock FOV set to:", CamlockConfig.FOV)
end

local function SetCamlockSmoothness(smoothness)
    CamlockConfig.Smoothness = math.clamp(smoothness or 5, 1, 20)
    print("üéöÔ∏è Camlock smoothness set to:", CamlockConfig.Smoothness)
end

local function SetCamlockPrediction(prediction)
    CamlockConfig.Prediction = math.clamp(prediction or 0.15, 0, 1)
    print("üîÆ Camlock prediction set to:", CamlockConfig.Prediction)
end

local function ToggleFOVCircle(enabled)
    CamlockConfig.ShowFOVCircle = enabled
    if fovCircle then
        fovCircle.Visible = enabled and isEnabled
    end
    print("‚≠ï FOV Circle:", enabled and "enabled" or "disabled")
end

-- –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
_G.EnableCamlock = EnableCamlock
_G.DisableCamlock = DisableCamlock
_G.CleanupCamlock = CleanupCamlock
_G.SetCamlockTarget = SetCamlockTarget
_G.SetCamlockFOV = SetCamlockFOV
_G.SetCamlockSmoothness = SetCamlockSmoothness
_G.SetCamlockPrediction = SetCamlockPrediction
_G.ToggleFOVCircle = ToggleFOVCircle

-- –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∫–ª–∞–≤–∏—à
connections.keyHandler = UserInputService.KeyDown:Connect(OnKeyPress)

print("üéØ Camlock System loaded successfully!")
print("üìã Available functions:")
print("   ‚Ä¢ _G.EnableCamlock()")
print("   ‚Ä¢ _G.DisableCamlock()")
print("   ‚Ä¢ _G.SetCamlockTarget(partName)")
print("   ‚Ä¢ _G.SetCamlockFOV(number)")
print("   ‚Ä¢ _G.SetCamlockSmoothness(1-20)")
print("   ‚Ä¢ _G.SetCamlockPrediction(0-1)")
print("   ‚Ä¢ _G.ToggleFOVCircle(boolean)")
print("   ‚Ä¢ _G.CleanupCamlock()")
print("‚å®Ô∏è Press '" .. CamlockConfig.Keybind .. "' to toggle camlock")

-- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ (—Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
-- EnableCamlock()
