-- BeterSlide System for Trident Survival - Fixed Version
local bhop_enabled = false
local speed = 55
local forcesprint = false
local niga, wtf = speed, 0
local slideConnection = nil

-- Services
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local Camera = Workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer

-- Global functions
_G.EnableBeterSlide = nil
_G.DisableBeterSlide = nil
_G.CleanupBeterSlide = nil
_G.SetSlideSpeed = nil
_G.SetForcesprint = nil

-- Helper functions
local function IsKeyDown(keyCode)
    return UserInputService:IsKeyDown(keyCode)
end

-- Get the correct character part for Trident Survival
local function GetMiddlePart()
    -- Wait and check for the specific Trident Survival character structure
    if Workspace:FindFirstChild("Const") and 
       Workspace.Const:FindFirstChild("Ignore") and 
       Workspace.Const.Ignore:FindFirstChild("LocalCharacter") then
        local localCharacter = Workspace.Const.Ignore.LocalCharacter
        return localCharacter:FindFirstChild("Middle")
    end
    return nil
end

-- Main BeterSlide logic (adapted for Trident Survival)
local function BeterSlideLoop(delta)
    local middle = GetMiddlePart()
    
    if bhop_enabled and middle and IsKeyDown(Enum.KeyCode.C) and IsKeyDown(Enum.KeyCode.LeftShift) then
        local cameralook = Camera.CFrame.LookVector
        cameralook = Vector3.new(cameralook.X, 0, cameralook.Z)
        local direction = Vector3.zero
        
        direction = IsKeyDown(Enum.KeyCode.W) and direction + cameralook or direction
        direction = IsKeyDown(Enum.KeyCode.S) and direction - cameralook or direction
        direction = IsKeyDown(Enum.KeyCode.D) and direction + Vector3.new(-cameralook.Z, 0, cameralook.X) or direction
        direction = IsKeyDown(Enum.KeyCode.A) and direction + Vector3.new(cameralook.Z, 0, -cameralook.X) or direction
        
        if direction.Magnitude > 0 then
            direction = direction.Unit
        end
        
        niga = math.clamp(niga - delta * 20, 17, speed)
        
        if wtf == 0 then
            middle.CFrame = middle.CFrame + Vector3.new(0, 6.5, 0)
        end
        
        middle.AssemblyLinearVelocity = Vector3.new(
            direction.X * niga,
            wtf < 0.85 and 0 or -7,
            direction.Z * niga
        )
        
        wtf = wtf + delta
    else
        if forcesprint and middle then
            local cameralook = Camera.CFrame.LookVector
            cameralook = Vector3.new(cameralook.X, 0, cameralook.Z)
            local direction = Vector3.zero
            
            direction = IsKeyDown(Enum.KeyCode.W) and direction + cameralook or direction
            direction = IsKeyDown(Enum.KeyCode.S) and direction - cameralook or direction
            direction = IsKeyDown(Enum.KeyCode.D) and direction + Vector3.new(-cameralook.Z, 0, cameralook.X) or direction
            direction = IsKeyDown(Enum.KeyCode.A) and direction + Vector3.new(cameralook.Z, 0, -cameralook.X) or direction
            
            if direction.Magnitude > 0 then
                direction = direction.Unit
            end
            
            middle.AssemblyLinearVelocity = Vector3.new(
                direction.X * 18,
                middle.AssemblyLinearVelocity.Y,
                direction.Z * 18
            )
        end
        
        niga = speed
        wtf = 0
    end
end

-- Wait for character to load (Trident Survival specific)
local function WaitForCharacter()
    local middle = nil
    repeat
        task.wait(0.5)
        middle = GetMiddlePart()
    until middle
    return middle
end

-- Enable BeterSlide function
local function EnableBeterSlide()
    if slideConnection then
        return -- Already enabled
    end
    
    -- Wait for character to be ready
    local middle = WaitForCharacter()
    if not middle then
        print("‚ùå Failed to find character - BeterSlide cannot be enabled")
        return
    end
    
    bhop_enabled = true
    niga = speed
    wtf = 0
    
    -- Connect main loop using RenderStepped (like the working example)
    slideConnection = RunService.RenderStepped:Connect(BeterSlideLoop)
    
    print("‚úÖ BeterSlide enabled for Trident Survival")
    print("üéÆ Controls:")
    print("   ‚Ä¢ Hold C + LeftShift to slide")
    print("   ‚Ä¢ Use WASD for direction")
    print("   ‚Ä¢ Current speed:", speed)
end

-- Disable BeterSlide function
local function DisableBeterSlide()
    bhop_enabled = false
    
    if slideConnection then
        slideConnection:Disconnect()
        slideConnection = nil
    end
    
    -- Reset parameters
    niga = speed
    wtf = 0
    
    print("‚ùå BeterSlide disabled")
end

-- Cleanup function
local function CleanupBeterSlide()
    DisableBeterSlide()
    
    -- Clear global functions
    _G.EnableBeterSlide = nil
    _G.DisableBeterSlide = nil
    _G.CleanupBeterSlide = nil
    _G.SetSlideSpeed = nil
    _G.SetForcesprint = nil
    
    print("üßπ BeterSlide cleaned up")
end

-- Set slide speed function
local function SetSlideSpeed(newSpeed)
    speed = math.clamp(newSpeed or 55, 55, 70)
    niga = speed -- Update current speed
    
    print("üèÉ Slide speed set to:", speed)
end

-- Set forcesprint function
local function SetForcesprint(enabled)
    forcesprint = enabled or false
    
    print("‚ö° Forcesprint set to:", forcesprint)
end

-- Assign global functions
_G.EnableBeterSlide = EnableBeterSlide
_G.DisableBeterSlide = DisableBeterSlide
_G.CleanupBeterSlide = CleanupBeterSlide
_G.SetSlideSpeed = SetSlideSpeed
_G.SetForcesprint = SetForcesprint

print("üõπ BeterSlide System loaded for Trident Survival!")
print("üìã Available functions:")
print("   ‚Ä¢ _G.EnableBeterSlide()")
print("   ‚Ä¢ _G.DisableBeterSlide()")
print("   ‚Ä¢ _G.SetSlideSpeed(55-70)")
print("   ‚Ä¢ _G.SetForcesprint(boolean)")
print("   ‚Ä¢ _G.CleanupBeterSlide()")
print("")
print("üéÆ How to use:")
print("   1. Enable BeterSlide from the GUI")
print("   2. Hold C + LeftShift while moving to slide")
print("   3. Use WASD for direction control")
print("   4. Adjust speed and forcesprint from GUI settings")
