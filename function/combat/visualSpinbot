-- Simple Visual Spinbot
-- Rotates only the visual appearance of the character, not the actual hitbox

local RunService = game:GetService("RunService")
local Players = game:GetService("Players")

local lplr = Players.LocalPlayer
local connection = nil
local rotationAngle = 0
local rotSpeed = 15 -- rotation speed (degrees per frame)

-- Global variables for control
_G.VisualSpinbotEnabled = false

-- Function to enable visual spinbot
function _G.EnableVisualSpinbot()
    _G.VisualSpinbotEnabled = true
    
    if connection then
        connection:Disconnect()
    end
    
    connection = RunService.Heartbeat:Connect(function()
        if _G.VisualSpinbotEnabled and lplr.Character and lplr.Character:FindFirstChild("HumanoidRootPart") then
            local rootPart = lplr.Character.HumanoidRootPart
            
            -- Increment rotation angle
            rotationAngle = rotationAngle + math.rad(rotSpeed)
            
            -- Apply visual rotation to all character parts except HumanoidRootPart
            for _, part in pairs(lplr.Character:GetChildren()) do
                if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
                    -- Create or update the visual rotation
                    if not part:GetAttribute("OriginalCFrame") then
                        part:SetAttribute("OriginalCFrame", part.CFrame)
                    end
                    
                    local originalCFrame = part:GetAttribute("OriginalCFrame")
                    local relativeCFrame = rootPart.CFrame:ToObjectSpace(originalCFrame)
                    local rotatedCFrame = CFrame.Angles(0, rotationAngle, 0) * relativeCFrame
                    part.CFrame = rootPart.CFrame * rotatedCFrame
                end
            end
            
            -- Also rotate accessories
            for _, accessory in pairs(lplr.Character:GetChildren()) do
                if accessory:IsA("Accessory") and accessory:FindFirstChild("Handle") then
                    local handle = accessory.Handle
                    if not handle:GetAttribute("OriginalCFrame") then
                        handle:SetAttribute("OriginalCFrame", handle.CFrame)
                    end
                    
                    local originalCFrame = handle:GetAttribute("OriginalCFrame")
                    local relativeCFrame = rootPart.CFrame:ToObjectSpace(originalCFrame)
                    local rotatedCFrame = CFrame.Angles(0, rotationAngle, 0) * relativeCFrame
                    handle.CFrame = rootPart.CFrame * rotatedCFrame
                end
            end
        end
    end)
    
    print("Visual Spinbot enabled!")
end

-- Function to disable visual spinbot
function _G.DisableVisualSpinbot()
    _G.VisualSpinbotEnabled = false
    
    if connection then
        connection:Disconnect()
        connection = nil
    end
    
    -- Reset all parts to original positions
    if lplr.Character then
        for _, part in pairs(lplr.Character:GetChildren()) do
            if part:IsA("BasePart") and part:GetAttribute("OriginalCFrame") then
                part.CFrame = part:GetAttribute("OriginalCFrame")
                part:SetAttribute("OriginalCFrame", nil)
            end
        end
        
        -- Reset accessories
        for _, accessory in pairs(lplr.Character:GetChildren()) do
            if accessory:IsA("Accessory") and accessory:FindFirstChild("Handle") then
                local handle = accessory.Handle
                if handle:GetAttribute("OriginalCFrame") then
                    handle.CFrame = handle:GetAttribute("OriginalCFrame")
                    handle:SetAttribute("OriginalCFrame", nil)
                end
            end
        end
    end
    
    rotationAngle = 0
    print("Visual Spinbot disabled!")
end

-- Cleanup function
function _G.CleanupVisualSpinbot()
    _G.DisableVisualSpinbot()
    _G.VisualSpinbotEnabled = nil
    _G.EnableVisualSpinbot = nil
    _G.DisableVisualSpinbot = nil
    _G.CleanupVisualSpinbot = nil
end

print("Visual Spinbot script loaded! Use _G.EnableVisualSpinbot() to start.")
