-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")
local Camera = Workspace.CurrentCamera

-- Hardcoded 3D Box ESP Settings
local box3d_esp_settings = {
    enabled = true, -- Master toggle for 3D Box ESP
    line_color = Color3.new(1, 1, 1), -- White
    line_transparency = 0, -- 0 = fully opaque, 1 = fully transparent
    line_thickness = 2, -- Line thickness
    outline_enabled = true, -- Enable outline
    outline_color = Color3.new(0, 0, 0), -- Black outline
    outline_thickness = 3, -- Outline thickness
    corner_enabled = true, -- Enable corner dots
    corner_color = Color3.new(1, 0, 0), -- Red corners
    corner_size = 4, -- Corner dot size
    teamcheck = false, -- Disable team check
    team_color = false, -- Use team colors
    maxdistance = 200, -- Maximum distance for ESP rendering
    distancelimit = false, -- Disable distance limit
    box_size = Vector3.new(3, 5, 3), -- Box dimensions (width, height, depth)
    box_offset = Vector3.new(0, -0.5, 0) -- Box position offset from HRP
}

-- Utility Functions
local function worldToScreen(world)
    local screen, inBounds = Camera:WorldToViewportPoint(world)
    return Vector2.new(screen.X, screen.Y), inBounds, screen.Z
end

local function getCorners(cframe, size)
    local corners = {}
    local halfSize = size / 2
    for x = -1, 1, 2 do
        for y = -1, 1, 2 do
            for z = -1, 1, 2 do
                corners[#corners + 1] = (cframe * CFrame.new(halfSize * Vector3.new(x, y, z))).Position
            end
        end
    end
    return corners
end

local function createLine(color, thickness)
    local line = Drawing.new("Line")
    line.Visible = false
    line.From = Vector2.new(0, 0)
    line.To = Vector2.new(0, 0)
    line.Color = color
    line.Thickness = thickness
    line.Transparency = 1 - box3d_esp_settings.line_transparency
    line.ZIndex = 2
    return line
end

local function createOutline(color, thickness)
    local line = Drawing.new("Line")
    line.Visible = false
    line.From = Vector2.new(0, 0)
    line.To = Vector2.new(0, 0)
    line.Color = color
    line.Thickness = thickness
    line.Transparency = 1 - box3d_esp_settings.line_transparency
    line.ZIndex = 1
    return line
end

local function createCorner(color, size)
    local circle = Drawing.new("Circle")
    circle.Visible = false
    circle.Position = Vector2.new(0, 0)
    circle.Radius = size
    circle.Color = color
    circle.Thickness = 0
    circle.Filled = true
    circle.Transparency = 0
    circle.ZIndex = 3
    return circle
end

-- 3D Box ESP Management
local loaded_players = {}

local function create_box3d_esp(model)
    if not (model and model:FindFirstChild("HumanoidRootPart")) then
        return
    end
    
    -- Find player object for team checks
    local player = nil
    for _, p in pairs(Players:GetPlayers()) do
        if p.Character == model then
            player = p
            break
        end
    end
    
    local lines = {}
    local outlines = {}
    local corners = {}
    
    -- Create 12 lines for the wireframe
    for i = 1, 12 do
        lines[i] = createLine(box3d_esp_settings.line_color, box3d_esp_settings.line_thickness)
        if box3d_esp_settings.outline_enabled then
            outlines[i] = createOutline(box3d_esp_settings.outline_color, box3d_esp_settings.outline_thickness)
        end
    end
    
    -- Create 8 corner dots
    if box3d_esp_settings.corner_enabled then
        for i = 1, 8 do
            corners[i] = createCorner(box3d_esp_settings.corner_color, box3d_esp_settings.corner_size)
        end
    end
    
    loaded_players[model] = {
        player = player,
        obj = {
            lines = lines,
            outlines = outlines,
            corners = corners
        },
        connection = nil
    }
    
    local plr_data = loaded_players[model]
    local obj = plr_data.obj
    local character = model
    local hrp = model:FindFirstChild("HumanoidRootPart")
    local humanoid = model:FindFirstChild("Humanoid")

    plr_data.connection = RunService.RenderStepped:Connect(function()
        if not (box3d_esp_settings.enabled and hrp and character and character.Parent) then
            for _, line in pairs(obj.lines) do
                line.Visible = false
            end
            for _, outline in pairs(obj.outlines) do
                outline.Visible = false
            end
            for _, corner in pairs(obj.corners) do
                corner.Visible = false
            end
            return
        end
        
        -- Check if character is alive
        if humanoid and humanoid.Health <= 0 then
            for _, line in pairs(obj.lines) do
                line.Visible = false
            end
            for _, outline in pairs(obj.outlines) do
                outline.Visible = false
            end
            for _, corner in pairs(obj.corners) do
                corner.Visible = false
            end
            return
        end

        local _, onScreen = worldToScreen(hrp.Position)
        if not onScreen then
            for _, line in pairs(obj.lines) do
                line.Visible = false
            end
            for _, outline in pairs(obj.outlines) do
                outline.Visible = false
            end
            for _, corner in pairs(obj.corners) do
                corner.Visible = false
            end
            return
        end

        -- Distance check
        local distance = (Camera.CFrame.Position - hrp.Position).Magnitude
        if box3d_esp_settings.distancelimit and distance > box3d_esp_settings.maxdistance then
            for _, line in pairs(obj.lines) do
                line.Visible = false
            end
            for _, outline in pairs(obj.outlines) do
                outline.Visible = false
            end
            for _, corner in pairs(obj.corners) do
                corner.Visible = false
            end
            return
        end

        -- Team check
        if box3d_esp_settings.teamcheck and plr_data.player and Players.LocalPlayer then
            if plr_data.player.Team == Players.LocalPlayer.Team then
                for _, line in pairs(obj.lines) do
                    line.Visible = false
                end
                for _, outline in pairs(obj.outlines) do
                    outline.Visible = false
                end
                for _, corner in pairs(obj.corners) do
                    corner.Visible = false
                end
                return
            end
        end

        -- Calculate 3D box corners
        local boxCFrame = hrp.CFrame * CFrame.new(box3d_esp_settings.box_offset)
        local boxCorners = getCorners(boxCFrame, box3d_esp_settings.box_size)
        
        -- Convert all corners to screen space
        local screenCorners = {}
        local anyVisible = false
        for i, corner in ipairs(boxCorners) do
            local screen, visible = worldToScreen(corner)
            screenCorners[i] = screen
            if visible then anyVisible = true end
        end
        
        if not anyVisible then
            for _, line in pairs(obj.lines) do
                line.Visible = false
            end
            for _, outline in pairs(obj.outlines) do
                outline.Visible = false
            end
            for _, corner in pairs(obj.corners) do
                corner.Visible = false
            end
            return
        end

        -- Determine color
        local lineColor = box3d_esp_settings.line_color
        local cornerColor = box3d_esp_settings.corner_color
        if box3d_esp_settings.team_color and plr_data.player and plr_data.player.TeamColor then
            lineColor = plr_data.player.TeamColor.Color
            cornerColor = plr_data.player.TeamColor.Color
        end

        -- Update corner dots
        if box3d_esp_settings.corner_enabled then
            for i, corner in pairs(obj.corners) do
                corner.Position = screenCorners[i]
                corner.Color = cornerColor
                corner.Visible = true
            end
        end

        -- Define line connections (which corners connect to which)
        local connections = {
            -- Bottom face (vertices 1,2,6,5)
            {1, 2}, {2, 6}, {6, 5}, {5, 1},
            -- Vertical lines
            {1, 3}, {2, 4}, {6, 8}, {5, 7},
            -- Top face (vertices 3,4,8,7)
            {3, 4}, {4, 8}, {8, 7}, {7, 3}
        }

        -- Draw wireframe lines with outlines
        for i, connection in ipairs(connections) do
            local from = screenCorners[connection[1]]
            local to = screenCorners[connection[2]]
            
            -- Draw outline first (thicker, behind)
            if box3d_esp_settings.outline_enabled and obj.outlines[i] then
                obj.outlines[i].From = from
                obj.outlines[i].To = to
                obj.outlines[i].Color = box3d_esp_settings.outline_color
                obj.outlines[i].Visible = true
            end
            
            -- Draw main line (thinner, in front)
            obj.lines[i].From = from
            obj.lines[i].To = to
            obj.lines[i].Color = lineColor
            obj.lines[i].Transparency = 1 - box3d_esp_settings.line_transparency
            obj.lines[i].Visible = true
        end
    end)
end

local function destroy_box3d_esp(model)
    local plr_data = loaded_players[model]
    if not plr_data then return end
    
    if plr_data.connection then
        plr_data.connection:Disconnect()
    end
    
    for _, line in pairs(plr_data.obj.lines) do
        line:Remove()
    end
    
    for _, outline in pairs(plr_data.obj.outlines) do
        outline:Remove()
    end
    
    for _, corner in pairs(plr_data.obj.corners) do
        corner:Remove()
    end
    
    loaded_players[model] = nil
end

-- Initialize 3D Box ESP for existing players
for _, v in ipairs(Workspace:GetChildren()) do
    create_box3d_esp(v)
end

-- Handle player addition and removal
Workspace.ChildAdded:Connect(create_box3d_esp)
Workspace.ChildRemoved:Connect(destroy_box3d_esp)

-- Global functions for external control
_G.DisableBoxESP = function()
    box3d_esp_settings.enabled = false
end

_G.EnableBoxESP = function()
    box3d_esp_settings.enabled = true
end

_G.CleanupBoxESP = function()
    for model, plr_data in pairs(loaded_players) do
        destroy_box3d_esp(model)
    end
end

-- Additional settings functions
_G.SetOutlineEnabled = function(enabled)
    box3d_esp_settings.outline_enabled = enabled
end

_G.SetCornersEnabled = function(enabled)
    box3d_esp_settings.corner_enabled = enabled
end

_G.SetLineColor = function(color)
    box3d_esp_settings.line_color = color
end

_G.SetCornerColor = function(color)
    box3d_esp_settings.corner_color = color
end

-- Cleanup on script termination (if needed)
pcall(function()
    game:BindToClose(function()
        for model, plr_data in pairs(loaded_players) do
            destroy_box3d_esp(model)
        end
    end)
end)
