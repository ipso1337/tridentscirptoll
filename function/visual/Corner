-- Corner ESP Script (Fixed)
-- Services
local RunService = game:GetService("RunService")
local PlayersService = game:GetService("Players")
local Workspace = game:GetService("Workspace")

-- Variables
local Camera = Workspace.CurrentCamera
local LocalPlayer = PlayersService.LocalPlayer
local Lines = {}
local ESPConnection = nil
local ESPEnabled = true

-- Settings
local Settings = {
    Box_Color = Color3.fromRGB(255, 255, 255),
    Box_Thickness = 2,
    Team_Check = false,
    Team_Color = false,
    Autothickness = true
}

-- Functions
local function HasCharacter(Player)
    return Player and Player.Character and Player.Character:FindFirstChild("HumanoidRootPart") and Player ~= LocalPlayer
end

local function NewLine(color, thickness)
    local line = Drawing.new("Line")
    line.Visible = false
    line.From = Vector2.new(0, 0)
    line.To = Vector2.new(0, 0)
    line.Color = color
    line.Thickness = thickness
    line.Transparency = 1
    return line
end

local function DrawCornerESP(Player)
    if not HasCharacter(Player) then return end
    
    local Character = Player.Character
    local HumanoidRootPart = Character.HumanoidRootPart
    local Humanoid = Character:FindFirstChild("Humanoid")
    
    if not Humanoid or Humanoid.Health <= 0 then return end
    
    -- Create corner box around player
    local HumPos, OnScreen = Camera:WorldToViewportPoint(HumanoidRootPart.Position)
    
    if not OnScreen then return end
    
    -- Calculate box dimensions
    local SizeX = 3 -- Box width
    local SizeY = 5 -- Box height
    
    -- Create CFrame for the box
    local BoxCFrame = CFrame.new(HumanoidRootPart.Position, Camera.CFrame.Position)
    
    -- Calculate corner positions
    local TL = Camera:WorldToViewportPoint((BoxCFrame * CFrame.new(SizeX/2, SizeY/2, 0)).Position)
    local TR = Camera:WorldToViewportPoint((BoxCFrame * CFrame.new(-SizeX/2, SizeY/2, 0)).Position)
    local BL = Camera:WorldToViewportPoint((BoxCFrame * CFrame.new(SizeX/2, -SizeY/2, 0)).Position)
    local BR = Camera:WorldToViewportPoint((BoxCFrame * CFrame.new(-SizeX/2, -SizeY/2, 0)).Position)
    
    -- Calculate corner offset based on distance
    local distance = (Camera.CFrame.Position - HumanoidRootPart.Position).Magnitude
    local offset = math.clamp(1/distance*750, 10, 50)
    
    -- Determine color
    local boxColor = Settings.Box_Color
    if Settings.Team_Check then
        if Player.TeamColor == LocalPlayer.TeamColor then
            boxColor = Color3.fromRGB(0, 255, 0)
        else 
            boxColor = Color3.fromRGB(255, 255, 255)
        end
    end
    
    if Settings.Team_Color then
        boxColor = Player.TeamColor.Color
    end
    
    -- Calculate thickness
    local thickness = Settings.Box_Thickness
    if Settings.Autothickness then
        thickness = math.clamp(1/distance*100, 1, 4)
    end
    
    -- Create corner lines
    -- Top Left Corner
    local TL1 = NewLine(boxColor, thickness)
    TL1.From = Vector2.new(TL.X, TL.Y)
    TL1.To = Vector2.new(TL.X + offset, TL.Y)
    TL1.Visible = true
    table.insert(Lines, TL1)
    
    local TL2 = NewLine(boxColor, thickness)
    TL2.From = Vector2.new(TL.X, TL.Y)
    TL2.To = Vector2.new(TL.X, TL.Y + offset)
    TL2.Visible = true
    table.insert(Lines, TL2)
    
    -- Top Right Corner
    local TR1 = NewLine(boxColor, thickness)
    TR1.From = Vector2.new(TR.X, TR.Y)
    TR1.To = Vector2.new(TR.X - offset, TR.Y)
    TR1.Visible = true
    table.insert(Lines, TR1)
    
    local TR2 = NewLine(boxColor, thickness)
    TR2.From = Vector2.new(TR.X, TR.Y)
    TR2.To = Vector2.new(TR.X, TR.Y + offset)
    TR2.Visible = true
    table.insert(Lines, TR2)
    
    -- Bottom Left Corner
    local BL1 = NewLine(boxColor, thickness)
    BL1.From = Vector2.new(BL.X, BL.Y)
    BL1.To = Vector2.new(BL.X + offset, BL.Y)
    BL1.Visible = true
    table.insert(Lines, BL1)
    
    local BL2 = NewLine(boxColor, thickness)
    BL2.From = Vector2.new(BL.X, BL.Y)
    BL2.To = Vector2.new(BL.X, BL.Y - offset)
    BL2.Visible = true
    table.insert(Lines, BL2)
    
    -- Bottom Right Corner
    local BR1 = NewLine(boxColor, thickness)
    BR1.From = Vector2.new(BR.X, BR.Y)
    BR1.To = Vector2.new(BR.X - offset, BR.Y)
    BR1.Visible = true
    table.insert(Lines, BR1)
    
    local BR2 = NewLine(boxColor, thickness)
    BR2.From = Vector2.new(BR.X, BR.Y)
    BR2.To = Vector2.new(BR.X, BR.Y - offset)
    BR2.Visible = true
    table.insert(Lines, BR2)
end

local function ClearESP()
    -- Clear all lines
    for i = 1, #Lines do
        local Line = Lines[i]
        if Line then
            Line:Remove()
        end
    end
    Lines = {}
end

local function CornerESP()
    if not ESPEnabled then
        ClearESP()
        return
    end

    ClearESP()
    
    local Players = PlayersService:GetPlayers()
    for i = 1, #Players do
        local Player = Players[i]
        if HasCharacter(Player) then
            DrawCornerESP(Player)
        end
    end
end

-- Main connection
if ESPConnection then
    ESPConnection:Disconnect()
end

ESPConnection = RunService.RenderStepped:Connect(CornerESP)

-- Global function to disable ESP (called when "none" is selected)
_G.DisableCornerESP = function()
    ESPEnabled = false
    ClearESP()
end

-- Global function to enable ESP (called when "corner" is selected)
_G.EnableCornerESP = function()
    ESPEnabled = true
end

-- Cleanup function
_G.CleanupCornerESP = function()
    if ESPConnection then
        ESPConnection:Disconnect()
        ESPConnection = nil
    end
    ClearESP()
end
