-- Long Neck Script for Trident
-- This script should be saved as longneck.lua in your GitHub repository

local workspace = cloneref(game:GetService("Workspace"))
local RunService = cloneref(game:GetService("RunService"))
local UserInputService = cloneref(game:GetService("UserInputService"))

-- Global variables for external control
_G.LongNeckEnabled = _G.LongNeckEnabled or false
_G.LongNeckKeybind = _G.LongNeckKeybind or Enum.KeyCode.E
_G.LongNeckOffset = _G.LongNeckOffset or 5

-- Trident Setup
local trident = {
    loaded = false,
    lastpos = nil,
    middlepart = nil,
    tcp = nil,
    original_model = nil,
    top = nil,
    originalprismcframe = nil
}

-- Wait for required game objects
local function waitForGameObjects()
    repeat
        local success, result = pcall(function()
            trident.middlepart = workspace.Const.Ignore.LocalCharacter.Middle
            trident.original_model = game:GetService("ReplicatedStorage").Shared.entities.Player.Model
            trident.top = workspace.Const.Ignore.LocalCharacter.Top
            trident.tcp = game:GetService("Players").LocalPlayer.TCP
        end)
        if not success then
            print("Waiting for game objects... Error: ", result)
            task.wait(0.5)
        end
    until trident.middlepart and trident.original_model and trident.top and trident.tcp
    
    -- Store original CFrame
    if trident.top and trident.top.Prism1 then
        trident.originalprismcframe = trident.top.Prism1.CFrame
        trident.loaded = true
    end
end

-- Long Neck Functions
local heartbeatConnection

function _G.EnableLongNeck()
    if not trident.loaded then
        waitForGameObjects()
    end
    
    _G.LongNeckEnabled = true
    
    -- Apply long neck immediately
    if trident.top and trident.top.Prism1 and trident.originalprismcframe then
        trident.top.Prism1.CFrame = trident.originalprismcframe - Vector3.yAxis * _G.LongNeckOffset
    end
    
    -- Start heartbeat connection if not already running
    if not heartbeatConnection then
        heartbeatConnection = RunService.Heartbeat:Connect(function()
            if _G.LongNeckEnabled and trident.top and trident.top.Prism1 and trident.originalprismcframe then
                trident.top.Prism1.CFrame = trident.originalprismcframe - Vector3.yAxis * _G.LongNeckOffset
            elseif not _G.LongNeckEnabled and trident.top and trident.top.Prism1 and trident.originalprismcframe then
                trident.top.Prism1.CFrame = trident.originalprismcframe
            end
        end)
    end
end

function _G.DisableLongNeck()
    _G.LongNeckEnabled = false
    
    -- Revert to original CFrame
    if trident.top and trident.top.Prism1 and trident.originalprismcframe then
        trident.top.Prism1.CFrame = trident.originalprismcframe
    end
end

function _G.SetLongNeckOffset(offset)
    _G.LongNeckOffset = offset
    
    -- Apply new offset if enabled
    if _G.LongNeckEnabled and trident.top and trident.top.Prism1 and trident.originalprismcframe then
        trident.top.Prism1.CFrame = trident.originalprismcframe - Vector3.yAxis * _G.LongNeckOffset
    end
end

function _G.SetLongNeckKeybind(keycode)
    _G.LongNeckKeybind = keycode
end

function _G.CleanupLongNeck()
    _G.DisableLongNeck()
    
    if heartbeatConnection then
        heartbeatConnection:Disconnect()
        heartbeatConnection = nil
    end
    
    -- Reset global variables
    _G.LongNeckEnabled = false
    _G.LongNeckKeybind = Enum.KeyCode.E
    _G.LongNeckOffset = 5
end

-- Keybind handler
local keybindConnection
if not keybindConnection then
    keybindConnection = UserInputService.InputBegan:Connect(function(input, gameProcessed)
        if gameProcessed then return end
        
        if input.KeyCode == _G.LongNeckKeybind then
            if _G.LongNeckEnabled then
                _G.DisableLongNeck()
            else
                _G.EnableLongNeck()
            end
        end
    end)
end

-- Initialize the script
waitForGameObjects()

print("Long Neck script loaded successfully!")
print("Press " .. tostring(_G.LongNeckKeybind) .. " to toggle Long Neck")
