-- True Visual Spinbot
-- Creates only visual spinning effect using camera manipulation or visual overlays

local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")

local lplr = Players.LocalPlayer
local camera = workspace.CurrentCamera
local connection = nil
local rotationAngle = 0
local rotSpeed = 10 -- rotation speed

-- Global variables for control
_G.VisualSpinbotEnabled = false
local originalCameraType = nil
local originalCameraSubject = nil

-- Method 1: Camera-based visual spinning (creates spinning view effect)
local function enableCameraSpinbot()
    if connection then
        connection:Disconnect()
    end
    
    -- Store original camera settings
    originalCameraType = camera.CameraType
    originalCameraSubject = camera.CameraSubject
    
    camera.CameraType = Enum.CameraType.Scriptable
    
    connection = RunService.Heartbeat:Connect(function()
        if _G.VisualSpinbotEnabled and lplr.Character and lplr.Character:FindFirstChild("HumanoidRootPart") then
            local rootPart = lplr.Character.HumanoidRootPart
            local humanoid = lplr.Character:FindFirstChild("Humanoid")
            
            if humanoid then
                -- Increment rotation
                rotationAngle = rotationAngle + math.rad(rotSpeed)
                
                -- Calculate camera position (spinning around character)
                local distance = 16 -- Distance from character
                local height = 2 -- Height offset
                
                local x = math.sin(rotationAngle) * distance
                local z = math.cos(rotationAngle) * distance
                
                local cameraPos = rootPart.Position + Vector3.new(x, height, z)
                local lookAtPos = rootPart.Position + Vector3.new(0, height - 1, 0)
                
                camera.CFrame = CFrame.lookAt(cameraPos, lookAtPos)
            end
        end
    end)
end

-- Method 2: UI-based visual spinning effect (overlays spinning UI elements)
local screenGui = nil
local spinningFrame = nil

local function enableUISpinbot()
    if screenGui then
        screenGui:Destroy()
    end
    
    -- Create spinning UI overlay
    screenGui = Instance.new("ScreenGui")
    screenGui.Name = "VisualSpinbotUI"
    screenGui.ResetOnSpawn = false
    screenGui.Parent = lplr.PlayerGui
    
    spinningFrame = Instance.new("Frame")
    spinningFrame.Name = "SpinFrame"
    spinningFrame.Size = UDim2.new(0, 200, 0, 200)
    spinningFrame.Position = UDim2.new(0.5, -100, 0.5, -100)
    spinningFrame.BackgroundTransparency = 0.8
    spinningFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    spinningFrame.BorderSizePixel = 0
    spinningFrame.Parent = screenGui
    
    -- Add spinning effect to UI
    local uiCorner = Instance.new("UICorner")
    uiCorner.CornerRadius = UDim.new(1, 0)
    uiCorner.Parent = spinningFrame
    
    -- Create spinning animation
    if connection then
        connection:Disconnect()
    end
    
    connection = RunService.Heartbeat:Connect(function()
        if _G.VisualSpinbotEnabled and spinningFrame then
            rotationAngle = rotationAngle + math.rad(rotSpeed * 2)
            spinningFrame.Rotation = math.deg(rotationAngle)
        end
    end)
end

-- Method 3: Clone-based visual spinning (creates spinning visual clone)
local visualClone = nil
local originalTransparency = {}

local function enableCloneSpinbot()
    if not lplr.Character then return end
    
    -- Clean up existing clone
    if visualClone then
        visualClone:Destroy()
    end
    
    -- Create visual clone
    visualClone = lplr.Character:Clone()
    visualClone.Name = "VisualSpinbotClone"
    visualClone.Parent = workspace
    
    -- Remove scripts and make clone purely visual
    for _, obj in pairs(visualClone:GetDescendants()) do
        if obj:IsA("LocalScript") or obj:IsA("Script") then
            obj:Destroy()
        elseif obj:IsA("BasePart") then
            obj.CanCollide = false
            obj.Anchored = false
        end
    end
    
    -- Make original character invisible
    for _, part in pairs(lplr.Character:GetChildren()) do
        if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
            originalTransparency[part] = part.Transparency
            part.Transparency = 1
        elseif part:IsA("Accessory") and part:FindFirstChild("Handle") then
            originalTransparency[part.Handle] = part.Handle.Transparency
            part.Handle.Transparency = 1
        end
    end
    
    -- Weld clone to original character
    local weld = Instance.new("WeldConstraint")
    weld.Part0 = lplr.Character.HumanoidRootPart
    weld.Part1 = visualClone.HumanoidRootPart
    weld.Parent = visualClone.HumanoidRootPart
    
    -- Start spinning the clone
    if connection then
        connection:Disconnect()
    end
    
    connection = RunService.Heartbeat:Connect(function()
        if _G.VisualSpinbotEnabled and visualClone and visualClone.Parent then
            rotationAngle = rotationAngle + math.rad(rotSpeed)
            
            -- Only rotate the visual clone, not the original
            for _, part in pairs(visualClone:GetChildren()) do
                if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
                    local rootPart = visualClone.HumanoidRootPart
                    local offset = part.CFrame:ToObjectSpace(rootPart.CFrame)
                    part.CFrame = rootPart.CFrame * CFrame.Angles(0, rotationAngle, 0) * offset
                end
            end
        end
    end)
end

-- Main enable function
function _G.EnableVisualSpinbot()
    _G.VisualSpinbotEnabled = true
    
    -- Use Method 3 (Clone-based) for true visual-only effect
    enableCloneSpinbot()
    
    print("True Visual Spinbot enabled! (Clone method)")
end

-- Disable function
function _G.DisableVisualSpinbot()
    _G.VisualSpinbotEnabled = false
    
    if connection then
        connection:Disconnect()
        connection = nil
    end
    
    -- Restore original camera
    if originalCameraType then
        camera.CameraType = originalCameraType
        camera.CameraSubject = originalCameraSubject
    end
    
    -- Clean up UI
    if screenGui then
        screenGui:Destroy()
        screenGui = nil
    end
    
    -- Clean up visual clone and restore original character
    if visualClone then
        visualClone:Destroy()
        visualClone = nil
    end
    
    -- Restore original character visibility
    if lplr.Character then
        for part, transparency in pairs(originalTransparency) do
            if part and part.Parent then
                part.Transparency = transparency
            end
        end
    end
    originalTransparency = {}
    
    rotationAngle = 0
    print("Visual Spinbot disabled!")
end

-- Cleanup function
function _G.CleanupVisualSpinbot()
    _G.DisableVisualSpinbot()
    _G.VisualSpinbotEnabled = nil
    _G.EnableVisualSpinbot = nil
    _G.DisableVisualSpinbot = nil
    _G.CleanupVisualSpinbot = nil
end

print("True Visual Spinbot loaded! This creates only visual effects without affecting hitbox.")
